import { Request, Response } from "express";
import { mixCrypto } from "../services/transactionService";
import { generateDepositAddress } from "../services/depositService";

export const createDeposit = async (req: Request, res: Response) => {
    try {
        const { currency } = req.body;

        if (!currency) {
            return res.status(400).json({ error: "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –≤–∞–ª—é—Ç—É!" });
        }

        const depositAddress = await generateDepositAddress();

        res.json({
            message: "‚úÖ –ê–¥—Ä–µ—Å –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞ —Å–æ–∑–¥–∞–Ω",
            currency,
            depositAddress,
        });
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞:", error);
        res.status(500).json({ error: "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
};

const startMixing = async (req: Request, res: Response) => {
    try {
        const { address, amount, currency } = req.body;

        if (!address || !amount || !currency) {
            return res.status(400).json({ error: "‚ö†Ô∏è –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!" });
        }

        console.log(`üîÑ –ó–∞–ø—É—Å–∫ –º–∏–∫—Å–µ—Ä–∞ –¥–ª—è ${currency}: ${amount} ‚Üí ${address}`);

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –º–∏–∫—à–∏—Ä–æ–≤–∞–Ω–∏—è
        const mixId = await mixCrypto(address, amount, currency);

        res.json({
            message: "‚úÖ –ú–∏–∫—Å–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!",
            mixId,
            status: "pending",
        });
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –º–∏–∫—Å–∏–Ω–≥–∞:", error);
        res.status(500).json({ error: "‚ùå –û—à–∏–±–∫–∞ –º–∏–∫—Å–∏–Ω–≥–∞" });
    }
};

export { startMixing };
